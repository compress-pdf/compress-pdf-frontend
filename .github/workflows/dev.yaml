name: Automated Build and Deployment with Docker (Development)

on:
  push:
    branches:
      - dev

jobs:
  build:
    runs-on: ubuntu-22.04

    steps:
      - name: Checkout Code from Repository ⤵️
        uses: actions/checkout@v4

      - name: Set up Docker Buildx 🏗️
        uses: docker/setup-buildx-action@v3

      - name: Create .env file 📄
        run: echo "${{ vars.ENV }}" > .env

      - name: Log in to GitHub Container Registry 🔑
        run: echo "${{ vars.GHCR_PAT }}" | docker login ghcr.io -u ${{ github.actor }} --password-stdin

      - name: Build and push Docker image 🐋
        uses: docker/build-push-action@v6
        with:
          context: .
          file: ./Dockerfile
          push: true
          tags: ghcr.io/compress-pdf/compress-dev:latest

  deploy:
    runs-on: ubuntu-22.04

    needs: build

    steps:
      - name: Checkout Code from Repository ⤵️
        uses: actions/checkout@v4

      - name: Install sshpass 🪪
        run: sudo apt-get install -y sshpass

      - name: Deploy Docker Container to VPS 🚀
        env:
          VPS_HOST: ${{ vars.VPS_HOST }}
          VPS_USER: ${{ vars.VPS_USER }}
          SSH_PORT: ${{ vars.SSH_PORT }}
          SSH_PASSWORD: ${{ vars.VPS_PASSWORD }}
        run: |
          sshpass -p $SSH_PASSWORD ssh -o StrictHostKeyChecking=no $VPS_USER@$VPS_HOST << 'EOF'
            echo -e "\n Logging in to GitHub Container Registry 🗝️ \n"
            docker login ghcr.io -u ${{ github.actor }} --password ${{ vars.GHCR_PAT }}

            if [ "$(docker ps -q -f name=compress-dev)" ]; then
                echo -e "\n Stopping running container: compress-dev 🛑 \n"
                docker container stop compress-dev
            fi

            if [ "$(docker container ls -a -q -f name=compress-dev)" ]; then
                echo -e "\n Removing stopped container: compress-dev 🚧 \n"
                docker container rm compress-dev
            fi

            echo -e "\n Pulling the latest image from GHCR 📥 \n"
            docker image pull ghcr.io/compress-pdf/compress-dev

            echo -e "\n Running the new container: compress-dev 🛩️ \n"
            docker container run -d \
              --name compress-dev \
              -p 5000:3000 \
              --restart always \
              ghcr.io/compress-pdf/compress-dev

            echo -e "\n Pruning unused Docker images 🧹 \n"
            docker image prune -f

            echo -e "\n Your application is live! 🎉 \n"
          EOF
